// Code generated by MockGen. DO NOT EDIT.
// Source: internal/business/domain/sqltx/sqltx.go
//
// Generated by this command:
//
//	mockgen -destination=internal/mocks/business/domain/sqltx/sqltx.go -package=mocks -source=internal/business/domain/sqltx/sqltx.go DomainSqlTx
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	gorm "gorm.io/gorm"
)

// MockDomainItf is a mock of DomainItf interface.
type MockDomainItf struct {
	ctrl     *gomock.Controller
	recorder *MockDomainItfMockRecorder
	isgomock struct{}
}

// MockDomainItfMockRecorder is the mock recorder for MockDomainItf.
type MockDomainItfMockRecorder struct {
	mock *MockDomainItf
}

// NewMockDomainItf creates a new mock instance.
func NewMockDomainItf(ctrl *gomock.Controller) *MockDomainItf {
	mock := &MockDomainItf{ctrl: ctrl}
	mock.recorder = &MockDomainItfMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDomainItf) EXPECT() *MockDomainItfMockRecorder {
	return m.recorder
}

// BeginTX mocks base method.
func (m *MockDomainItf) BeginTX() *gorm.DB {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BeginTX")
	ret0, _ := ret[0].(*gorm.DB)
	return ret0
}

// BeginTX indicates an expected call of BeginTX.
func (mr *MockDomainItfMockRecorder) BeginTX() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BeginTX", reflect.TypeOf((*MockDomainItf)(nil).BeginTX))
}

// CommitTX mocks base method.
func (m *MockDomainItf) CommitTX(tx *gorm.DB) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CommitTX", tx)
	ret0, _ := ret[0].(error)
	return ret0
}

// CommitTX indicates an expected call of CommitTX.
func (mr *MockDomainItfMockRecorder) CommitTX(tx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CommitTX", reflect.TypeOf((*MockDomainItf)(nil).CommitTX), tx)
}

// RollbackTX mocks base method.
func (m *MockDomainItf) RollbackTX(tx *gorm.DB) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RollbackTX", tx)
	ret0, _ := ret[0].(error)
	return ret0
}

// RollbackTX indicates an expected call of RollbackTX.
func (mr *MockDomainItfMockRecorder) RollbackTX(tx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RollbackTX", reflect.TypeOf((*MockDomainItf)(nil).RollbackTX), tx)
}
