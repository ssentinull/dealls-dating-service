// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Feed Feed
//
// swagger:model feed
type Feed struct {

	// the User Id
	ID int64 `json:"id" binding:"required"`

	// the User Name
	Name string `json:"name" binding:"required"`

	// the User Gender
	Gender string `json:"gender" binding:"required"`

	// the User Age
	Age int64 `json:"age" binding:"required"`

	// the User Location
	Location string `json:"location" binding:"required"`

	// the Profile Picture URL
	// Format: uri
	ProfilePictureURL strfmt.URI `json:"profile_picture_url"`
}

// Validate validates this feed
func (m *Feed) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProfilePictureURL(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Feed) validateProfilePictureURL(formats strfmt.Registry) error {
	if swag.IsZero(m.ProfilePictureURL) { // not required
		return nil
	}

	if err := validate.FormatOf("profile_picture_url", "body", "uri", m.ProfilePictureURL.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this feed based on context it is used
func (m *Feed) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Feed) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Feed) UnmarshalBinary(b []byte) error {
	var res Feed
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
