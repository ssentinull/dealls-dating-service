// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Pagination Pagination
//
// swagger:model pagination
type Pagination struct {

	// number of data returned
	// Example: 10
	CurrentData int64 `json:"current_data,omitempty"`

	// [offset only] number of current page
	// Example: 1
	CurrentPage int64 `json:"current_page,omitempty"`

	// next page
	NextPage *int64 `json:"next_page,omitempty"`

	// url of the next page if exist
	// Example: /?offset=10\u0026limit=5
	NextURL string `json:"next_url,omitempty"`

	// prev page
	PrevPage *int64 `json:"prev_page,omitempty"`

	// url of the previous page if exist
	// Example: /?offset=0\u0026limit=5
	PrevURL string `json:"prev_url,omitempty"`

	// number of total data that can be acquired
	// Example: 2500
	TotalData int64 `json:"total_data,omitempty"`

	// [offset only] number of total pages
	// Example: 100
	TotalPages int64 `json:"total_pages,omitempty"`
}

// Validate validates this pagination
func (m *Pagination) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this pagination based on context it is used
func (m *Pagination) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Pagination) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Pagination) UnmarshalBinary(b []byte) error {
	var res Pagination
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
